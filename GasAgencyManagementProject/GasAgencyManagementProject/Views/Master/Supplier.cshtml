@{
    ViewBag.Title = "Supplier";
}
@using GasAgencyManagementProject.Models.Master
<!DOCTYPE html>
<html>
<head>
    <link href="~/css/style.css" rel="stylesheet" />
</head>
<body>
    <div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card bg-light">
                    <div>
                        <h4 class="mb-0">Supplier Master</h4>
                    </div>
                    <div class="tabs">
                        @{
                            Tbl_Mstr_Page mm = (Tbl_Mstr_Page)ViewData["PERMISSIONREAD"];
                            Tbl_Mstr_Page mw = (Tbl_Mstr_Page)ViewData["PERMISSION"];
                            bool canRead = mm.PERMISSION;
                            bool canWrite = mw.PERMISSION;
                        }
                        @if (canRead && canWrite)
                        {
                            <ul class="nav nav-tabs" id="myTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab1" data-toggle="tab" href="#content1" onclick="toggleTabs('content1')">ADD</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link " id="tab2" data-toggle="tab" href="#content2" onclick="toggleTabs('content2')">VIEW</a>
                                </li>
                            </ul>
                        }
                        else if (canRead)
                        {
                            <ul class="nav nav-tabs" id="myTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab2" data-toggle="tab" href="#content2" onclick="toggleTabs('content2')">VIEW</a>
                                </li>
                            </ul>
                        }
                        else if (canWrite)
                        {
                            <ul class="nav nav-tabs" id="myTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab1" data-toggle="tab" href="#content1" onclick="toggleTabs('content1')">ADD</a>
                                </li>
                            </ul>
                        }
                        else
                        {
                            <p>You don't have permission to access this page.</p>
                        }
                    </div>
                </div>
            </div>
            @{
                Tbl_Mstr_Page m = (Tbl_Mstr_Page)ViewData["PERMISSION"];
                if (m.PERMISSION == true)
                {
                    <div class="col-lg-12" id="content1">
                        <div class="card">
                            <div class="card-body">
                                <div class="basic-form">
                                    <form>
                                        <div class="row">
                                            <div class="form-group col-md-3">
                                                <label>Supplier Name</label>
                                                <input type="text" class="form-control" placeholder="Supplier Name" id="txt_SupplierName" tabindex="6">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Status</label>
                                                <select class="form-control" id="ddl_Status" tabindex="7">
                                                    <option value=""  hidden>--Select Status--</option>
                                                    <option value="Active" selected>Active</option>
                                                    <option value="InActive">In Active</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3 posit">
                                                <button type="button" class="btn btn-primary" onclick="SupplierIUD()" id="btn_submit" tabindex="8">SUBMIT</button>
                                                <button type="button" class="btn btn-danger" id="btn_cancel" tabindex="9" onclick="ClearSupplier()">CLEAR</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            <div class="col-lg-12" id="content2" style="display: none;">
                <!-- View Content -->
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover table-striped table-bordered" id="tblViewupplier">
                                    <thead>
                                        <tr class="headergrid" color: #fff">
                                            <th style="text-align: center; width: 76px">SlNo</th>
                                            <th style="text-align: center;">Supplier Name</th>
                                            <th style="text-align: center;">Status</th>
                                            <th style="text-align: center; width: 100px">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <!-- /# card -->
                </div>
                <!-- View Content -->
            </div>
        </div>
    </div>
    <input type="hidden" id="hdnId" value=""   />
</body>
</html>
<link href="~/css/DataTable.css" rel="stylesheet" />
<script src="~/js/DataTable.js"></script>
<script>
    $(document).ready(function () {
        $.noConflict();
        debugger;
        @{
            Tbl_Mstr_Page mm1 = ViewData["PERMISSIONREAD"] as Tbl_Mstr_Page;
            Tbl_Mstr_Page mw1 = ViewData["PERMISSION"] as Tbl_Mstr_Page;
            bool canRead1 = mm1?.PERMISSION ?? false;
            bool canWrite1 = mw1?.PERMISSION ?? false;
        }

        // Use JavaScript variables to store the values of canRead and canWrite
        var canReadAccess = @Html.Raw(Json.Encode(canRead1));
        var canWriteAccess = @Html.Raw(Json.Encode(canWrite1));
        // Trigger click event on the "VIEW" tab if read access is enabled
        if (canReadAccess && !canWriteAccess) {
            $('#tab2').click();
        }
        $('#tab1').click(function () {
            ClearSupplier();
        });
        $('#txt_SupplierName').focus();
        var dataTable = $('#tblViewupplier').DataTable();
        $('form').keypress(function (e) {
            if (e.which === 13) {
                e.preventDefault(); // Prevent the default Enter key behavior (e.g., submitting a form)
                if ($('#btn_cancel').is(':focus')) {
                    e.stopPropagation();
                    ClearSupplier(); // Call ClearSupplier if the clear button is focused
                }
                else {
                    SupplierIUDOnEnter(); // Call SupplierIUDOnEnter for form submission
                }
            }
        });
    });
    // Custom function to handle form submission on Enter key
    function SupplierIUDOnEnter() {
            SupplierIUD();
    }
    document.addEventListener('keydown', function (event) {
        if (event.key === 'Escape') {
            ClearSupplier();
        }
    });
    //UserValidation ALertMsg
    function SupplierIUD() {
        $("txt_SupplierName").focus();
        var ButtonData = $('#btn_submit');
        var action
        if (ButtonData.text() === "SUBMIT") {
            debugger;
            action = "INSERT"
        }
        else {
            debugger;
            action = "UPDATE"
        }
        txt_SupplierName.focus();
        if (ValidateCategory() == true) {
            $.ajax({
                type: 'post',
                dataType: 'JSON',
                url: '../Master/MstrSupplierIUD',
                data: {
                    'Suplr_Id': $('#hdnId').val(),
                    'Suplr_Name': $('#txt_SupplierName').val(), 'Suplr_Status': $('#ddl_Status').val(),
                    'Action': action
                },
                success: function (res) {
                    debugger;
                    if (res == 'Supplier Name Already Exist.Duplicate Not Allowed') {
                        txt_SupplierName.focus();
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops',
                            text: res
                        })
                        return false;
                    }
                    else if (res == 'Supplier Master Created Successfully') {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: res,
                            didOpen: () => {
                                // Use a timeout to ensure the Swal modal is rendered before attempting to set focus
                                setTimeout(() => {
                                    const okButton = document.querySelector('.swal2-confirm');
                                    if (okButton) {
                                        okButton.focus();
                                    }
                                }, 0);
                            },
                        })
                        ClearSupplier();
                    }
                    else if (res == 'Supplier Master Modified Successfully') {
                        Swal.fire({
                            icon: 'success',
                            title: 'Updated',
                            text: res,
                            didOpen: () => {
                                // Use a timeout to ensure the Swal modal is rendered before attempting to set focus
                                setTimeout(() => {
                                    const okButton = document.querySelector('.swal2-confirm');
                                    if (okButton) {
                                        okButton.focus();
                                    }
                                }, 0);
                            },
                        });
                        ClearSupplier();
                        $('#btn_submit').text('SUBMIT');
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops',
                            text: res
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }
    }
    //UserValidation PopupMsg
    function ValidateCategory() {
        if ($('#txt_SupplierName').val() === "") {
            $('#txt_SupplierName').focus();
            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Supplier Name cannot be  blank!!'
            });
            return false;
        }
        if ($('#ddl_Status').val() === "") {
            $('#ddl_Status').focus();
            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Supplier Status cannot be  blank!!'
            });
            return false;
        }
        return true;
    }
    //ClearUser
    function ClearSupplier() {
        $('#txt_SupplierName').val('');
        $('#ddl_Status').val('Active');
        $('#txt_SupplierName').focus();
        $("#btn_submit").text("SUBMIT")
    }
    setTimeout(function () {
        initializeDataTable();
    }, 0);
    var initializeDataTable = function () {
        if ($.fn.DataTable.isDataTable('#tblViewupplier')) {
            $('#tblViewupplier').DataTable().destroy();
        }
        var dt = $('#tblViewupplier').DataTable(
            {
                "processing": true,
                "responsive": true,
                "serverSide": true,
                "searching": true,
                "paging": true,
                "sort": true,
                "ajax": {
                    "url": "/Master/GetSupplier",
                    "type": "GET"  // Assuming a POST request, change it to "GET" if needed
                },
                "columns": [
                    {
                        "className": "text-center",
                        "data": null,
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "Suplr_Name" },
                    { "data": "Suplr_Status" },
                    {
                        "class": "details-control",
                        "orderable": false,
                        "data": null, render: function (data, type, row) {
                            return "<div class='btn-group' style='text-align:center;' ><a  id='" + data.Suplr_Id + "' onclick='return_id(this.id);' style='cursor:pointer;' title='Edit' class='btn btn-primary action_btn'><i class='jsgrid-button jsgrid-edit-button ti-pencil-alt btn btn-primary color-white'></i></a>" +
                                "<a id='" + data.Suplr_Id + "' onclick='delete_id(this.id);' style='cursor:pointer;' title='Delete' class='btn btn-danger action_btn'><i class='jsgrid-button jsgrid-delete-button ti-trash btn btn-danger  color-white'></i></a></div>";
                        }
                    }
                ],
                "order": [[0, 'asc']],
            });
    }
    function toggleTabs(tabId) {
        if (tabId === 'content1') {
            debugger;
            $('#content1').show();
            $('#txt_SupplierName').focus();
            $('#content2').hide();
        } else if (tabId === 'content2') {
            setTimeout(function () {
                if ($("#btn_submit").text() == "UPDATE") {
                    ClearSupplier();
                    $("#btn_submit").text("SUBMIT")
                }
                initializeDataTable();
                $('#content1').hide();
                $('#content2').show();
            }, 0);
        }
    }
    //----------edit data---------------
    function return_id(par) {
        var canEdit = @Html.Raw(Json.Encode(canWrite1));
        if (!canEdit) {
        Swal.fire({
            icon: 'error',
            title: 'Oops',
            text: 'YOU HAVE NO PERMISSION FOR EDIT!'
        });
        return;
        }
        $('#tab1').addClass('active');
        $('#tab2').removeClass('active').addClass('closed');
        $('#content1').show();
        $('#content2').hide();
        $.ajax(
            {
                url: '/Master/EditSupplier?Id=' + par, // Replace with your controller and action
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $('#hdnId').val(par),
                        $('#txt_SupplierName').focus(),
                        $('#txt_SupplierName').val(data.Suplr_Name)
                    $('#ddl_Status').val(data.Suplr_Status)
                    $('#btn_submit').text('UPDATE');
                },
                error: function () {
                    console.log('Error loading data.');
                }
            });
    }
    //-----------end here---------------
    //-----------delete data--------------
    function delete_id(par) {
        debugger;
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                var equip = {
                    'Suplr_Id': par,
                    'Action': 'DELETE'
                };
                $.ajax({
                    url: '/Master/MstrSupplierIUD',
                    data: JSON.stringify(equip),
                    type: 'post',
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (res) {
                        if (res === "Supplier Master Deleted Successfully") {
                            Swal.fire({
                                icon: 'success',
                                title: "Deleted",
                                text: res
                            });
                            setTimeout(function () {
                                debugger;
                                /*  window.location.href = "/Master/Consumer";*/
                                initializeDataTable();
                                debugger;
                                $('#content1').hide();
                                $('#content2').show();
                            }, 100);
                        }
                         else if (res === "YOU HAVE NO PERMISSION FOR DELETE!") {
                            Swal.fire({
                                icon: 'error',
                                title: "Oops",
                                text: res
                            });
                        }
                        else if (res == 'Supplier is referenced in the Stock table. Cannot delete.') {
                            Swal.fire({
                                icon: 'error',
                                title: "Oops",
                                text: res,
                                didOpen: () => {
                                    // Use a timeout to ensure the Swal modal is rendered before attempting to set focus
                                    setTimeout(() => {
                                        const okButton = document.querySelector('.swal2-confirm');
                                        if (okButton) {
                                            okButton.focus();
                                        }
                                    }, 0);
                                },
                            })
                        }
                        else {
                            alert(res);
                        }
                    },
                    error: function (err) {
                        alert(err);
                    }
                });
            }
        });
    }
</script>