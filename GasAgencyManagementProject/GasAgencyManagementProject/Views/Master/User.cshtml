@{
    ViewBag.Title = "User";
}
@using GasAgencyManagementProject.Models.Master
<!DOCTYPE html>
<html>
<head>
    <link href="~/css/style.css" type="text/css" rel="stylesheet" />
    <style>
        .password-container {
            position: relative;
        }
        .toggle-password {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }
        .toggle-confirmpassword {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card bg-light">
                    <div>
                        <h4 class="mb-0">User Master</h4>
                    </div>
                    <div class="tabs">
                        @{
                            Tbl_Mstr_Page mm = (Tbl_Mstr_Page)ViewData["PERMISSIONREAD"];
                            Tbl_Mstr_Page mw = (Tbl_Mstr_Page)ViewData["PERMISSION"];
                            bool canRead = mm.PERMISSION;
                            bool canWrite = mw.PERMISSION;
                        }
                        @if (canRead && canWrite)
                        {
                            <ul class="nav nav-tabs" id="myTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab1" data-toggle="tab" href="#content1" onclick="toggleTabs('content1')">ADD</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link " id="tab2" data-toggle="tab" href="#content2" onclick="toggleTabs('content2')">VIEW</a>
                                </li>
                            </ul>
                        }
                        else if (canRead)
                        {
                            <ul class="nav nav-tabs" id="myTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab2" data-toggle="tab" href="#content2" onclick="toggleTabs('content2')">VIEW</a>
                                </li>
                            </ul>
                        }
                        else if (canWrite)
                        {
                            <ul class="nav nav-tabs" id="myTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab1" data-toggle="tab" href="#content1" onclick="toggleTabs('content1')">ADD</a>
                                </li>
                            </ul>
                        }
                        else
                        {
                            <p>You don't have permission to access this page.</p>
                        }
                    </div>
                </div>
            </div>
            @{
                Tbl_Mstr_Page m = (Tbl_Mstr_Page)ViewData["PERMISSION"];
                if (m.PERMISSION == true)
                {
                    <div class="col-lg-12" id="content1">
                        <div class="card">
                            <div class="card-body">
                                <div class="basic-form">
                                    <form>
                                        <div class="row">
                                            <div class="form-group col-md-3">
                                                <label> User Name</label>
                                                <input type="text" class="form-control" id="txt_UserName" tabindex="6" placeholder="User Name">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Phone No</label>
                                                <input type="text" maxlength="10" class="form-control" id="txt_PhoneNo" tabindex="7" placeholder="Phone No" oninput="validateInput(this)">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Email</label>
                                                <input type="text" class="form-control" id="txt_UserEmail" tabindex="8" placeholder="Email">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Password</label>
                                                <div class="password-container">
                                                    <input type="password" class="form-control" id="txt_UserPwd" tabindex="9" placeholder="Password">
                                                    <span class="toggle-password" onclick="togglePasswordVisibility()"><i class="fa fa-eye" style="color:black;"></i></span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Confrim Password</label>
                                                <div class="password-container">
                                                    <input type="password" class="form-control" id="txt_UserConfrpwd" tabindex="10" placeholder="Confrim Password">
                                                    <span class="toggle-confirmpassword" onclick="toggleConfirmPasswordVisibility()"><i class="fa fa-eye" style="color:black;"></i></span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Type</label>
                                                <select class="form-control" id="ddl_UserType" tabindex="11">
                                                    <option value="" selected hidden>--Select Type--</option>
                                                    <option value="Admin">Admin</option>
                                                    <option value="User">User</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row  ">
                                            <div class="col-md-3 posit">
                                                <button type="button" class="btn btn-primary" onclick="UserIUD()" id="btn_submit" tabindex="12">SUBMIT</button>
                                                <button type="button" class="btn btn-danger" onclick="ClearUser();" id="btn_cancel" tabindex="13">CLEAR</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            <!-- Your "View" content -->
            <div class="col-lg-12" id="content2" style="display: none;">
                <!-- View Content -->
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-title">
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover table-striped table-bordered" id="tbl_ViewUserMstr">
                                    <thead>
                                        <tr class="headergrid">
                                            <th style="text-align: center;">SlNo</th>
                                            <th style="text-align: center;">User Name</th>
                                            <th style="text-align: center;">Phone No</th>
                                            <th style="text-align: center;">Email</th>
                                            <th style="text-align: center;">Type</th>
                                            <th style="text-align: center; width: 100px">Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                    <!-- /# card -->
                </div>
                <!-- View Content -->
            </div>
        </div>
        <input type="hidden" id="hdnId" value=""     />
    </div>
</body>
</html>
<link href="~/css/DataTable.css" rel="stylesheet" />
<script src="~/js/DataTable.js"></script>
<script>
    function validateInput(input) {
        // Remove any non-numeric characters
        input.value = input.value.replace(/\D/g, '');
    }
    function toggleConfirmPasswordVisibilityOnClick() {
        debugger;
        var passwordField = $("#txt_UserConfrpwd");
        var toggleButton = $(".toggle-confirmpassword i");
        if (passwordField.attr("type") === "password") {
            passwordField.attr("type", "text");
            toggleButton.removeClass("fa-eye").addClass("fa-eye-slash");
        } else {
            passwordField.attr("type", "password");
            toggleButton.removeClass("fa-eye-slash").addClass("fa-eye");
        }
    }
    function togglePasswordVisibilityOnClick() {
        debugger;
        var passwordField = $("#txt_UserPwd");
        var toggleButton = $(".toggle-password i");
        if (passwordField.attr("type") === "password") {
            passwordField.attr("type", "text");
            toggleButton.removeClass("fa-eye").addClass("fa-eye-slash");
        } else {
            passwordField.attr("type", "password");
            toggleButton.removeClass("fa-eye-slash").addClass("fa-eye");
        }
    }
    $(document).ready(function () {
        $.noConflict();


        $(".toggle-confirmpassword").on("click", function () {
            debugger;
            toggleConfirmPasswordVisibilityOnClick();
        });

        $(".toggle-password").on("click", function () {
            debugger;
            togglePasswordVisibilityOnClick();
        });


     @{
    Tbl_Mstr_Page mm1 = ViewData["PERMISSIONREAD"] as Tbl_Mstr_Page;
    Tbl_Mstr_Page mw1 = ViewData["PERMISSION"] as Tbl_Mstr_Page;
    bool canRead1 = mm1?.PERMISSION ?? false;
    bool canWrite1 = mw1?.PERMISSION ?? false;
}
// Use JavaScript variables to store the values of canRead and canWrite
var canReadAccess = @Html.Raw(Json.Encode(canRead1));
var canWriteAccess = @Html.Raw(Json.Encode(canWrite1));
// Trigger click event on the "VIEW" tab if read access is enabled
if (canReadAccess && !canWriteAccess) {
    $('#tab2').click();
}
        $('#txt_UserName').focus();
        $('form').keypress(function (e) {
            if (e.which === 13) {
                e.preventDefault(); // Prevent the default Enter key behavior (e.g., submitting a form)
                if ($('#btn_cancel').is(':focus')) {
                    e.stopPropagation();
                    ClearUser(); // Call ClearSupplier if the clear button is focused
                }
                else {
                    UserIUDOnEnter(); // Call SupplierIUDOnEnter for form submission
                }
            }
        });
        $('#txt_UserPwd').attr("type", "password");
        $('#txt_UserConfrpwd').attr("type", "password");
    });
   
    // Custom function to handle form submission on Enter key
    function UserIUDOnEnter() {
        UserIUD();
    }
    document.addEventListener('keydown', function (event) {
        // Check if the pressed key is Escape (key code 27)
        if (event.key === 'Escape') {
            ClearUser ();
        }
    });
    function toggleTabs(tabId) {
        if (tabId === 'content1') {
            $('#content1').show();
            $('#txt_UserName').focus();
            $('#content2').hide();
        }
        else if (tabId === 'content2') {
            setTimeout(function () {
                if ($("#btn_submit").text() == "UPDATE") {
                    ClearUser();
                    $("#btn_submit").text("SUBMIT")
                }
                initializeDataTable();
                $('#content1').hide();
                $('#content2').show();
            }, 0);
        }
    }
    //UserValidation ALertMsg
    function UserIUD()
    {
        debugger;
        var ButtonData = $('#btn_submit');
        var action
        if (ButtonData.text() === "SUBMIT") {
            debugger;
            action = "INSERT"
        }
        else {
            debugger;
            action = "UPDATE"
        }
        $('#txt_UserName').focus();
        debugger;
        if (ValidateUser() == true) {
            $.ajax({
                type: 'post',
                dataType: 'JSON',
                url: '../Master/MstrUserIUD',
                data: {
                    'User_Id': $('#hdnId').val(),
                    'User_Name': $('#txt_UserName').val(), 'User_PhNo': $('#txt_PhoneNo').val(),
                    'User_Email': $('#txt_UserEmail').val(), 'User_Pwd': $('#txt_UserPwd').val(),
                    'UserConfrPwd': $('#txt_UserConfrpwd').val(), 'User_Type': $('#ddl_UserType').val(),
                    'Action':action
                },
                success: function (res) {
                    debugger;
                    if (res == 'User Phoneno Already Exist.Duplicate Not Allowed') {
                        $('#txt_PhoneNo').focus();
                        Swal.fire({
                            icon: 'info',
                            title: 'Info',
                            text: res
                        });
                        return false;
                    }
                    else if (res == 'User Email Already Exist.Duplicate Not Allowed') {
                        $('#txt_UserEmail').focus();
                        Swal.fire({
                            icon: 'info',
                            title: 'Info',
                            text: res
                        });
                        return false;
                    }
                    else if (res == 'User Master Created Successfully') {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: res,
                            didOpen: () => {
                                // Use a timeout to ensure the Swal modal is rendered before attempting to set focus
                                setTimeout(() => {
                                    const okButton = document.querySelector('.swal2-confirm');
                                    if (okButton) {
                                        okButton.focus();
                                    }
                                }, 0);
                            },
                        });
                        ClearUser();
                    }
                    else if (res == 'User Master Modified  Successfully') {
                        Swal.fire({
                            icon: 'success',
                            title: 'Updated',
                            text: res,
                            didOpen: () => {
                                // Use a timeout to ensure the Swal modal is rendered before attempting to set focus
                                setTimeout(() => {
                                    const okButton = document.querySelector('.swal2-confirm');
                                    if (okButton) {
                                        okButton.focus();
                                    }
                                }, 0);
                            },
                        });
                        ClearUser();
                        $('#btn_submit').text('SUBMIT');
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops',
                            text: res
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }
    }
    //UserValidation PopupMsg
    function ValidateUser() {
        if ($('#txt_UserName').val() === "") {
            $('#txt_UserName').focus();
            Swal.fire(
                {
                    icon: 'info',
                    title: 'Info',
                    text: 'User Name cannot be  blank!!'
                }

            );
            return false;
        }
        if ($('#txt_PhoneNo')) {
            if ($('#txt_PhoneNo').val() === "") {
                $('#txt_PhoneNo').focus();
                Swal.fire({
                    icon: 'info',
                    title: 'Info',
                    text: 'PhoneNo cannot be blank!!'
                });
                return false;
            }
            var regex = /^[0-9]+$/;
            if (!regex.test($('#txt_PhoneNo').val())) {
                $('#txt_PhoneNo').focus();
                    Swal.fire({
                        icon: 'info',
                        title: 'Info',
                        text: 'PhoneNo cannot contain characters!!'
                    });
                    return false;
                }
            if ($('#txt_PhoneNo').val().length > 10) {
                $('#txt_PhoneNo').focus();
                    Swal.fire({
                        icon: 'info',
                        title: 'Info',
                        text: 'PhoneNo cannot exceed ten digit!!'
                    });
                    return false;
                }
            if ($('#txt_PhoneNo').val().length < 10) {
                $('#txt_PhoneNo').focus();
                    Swal.fire({
                        icon: 'info',
                        title: 'Info',
                        text: 'PhoneNo cannot less than ten digit!!'
                    });
                    return false;
                }
            }
        if ($('#txt_UserEmail')) {
            if ($('#txt_UserEmail').val() === "") {
                $('#txt_UserEmail').focus();
                Swal.fire({
                    icon: 'info',
                    title: 'Info',
                    text: 'User Email cannot be  blank!!'
                });
                return false;
            }
            var emailPattern = /^[^\s@@]+@@[^\s@@]+\.[a-zA-Z]{2,}$/;
            if (!emailPattern.test($('#txt_UserEmail').val())) {
                $('#txt_UserEmail').focus();
                Swal.fire({
                    icon: 'info',
                    title: 'Info',
                    text: 'please enter valid email address!!'
                });
                return false;
            }
        }
        if ($('#txt_UserPwd').val() === "") {
            $('#txt_UserPwd').focus();
            Swal.fire(
                {
                    icon: 'info',
                    title: 'Info',
                    text: 'User Password cannot be blank!!'
                });
            return false;
        }
        if ($('#txt_UserConfrpwd').val() === "") {
            $('#txt_UserConfrpwd').focus();
            Swal.fire(
                {
                    icon: 'info',
                    title: 'Info',
                    text: 'User Confrim Password cannot be blank!!'
                });
            return false;
        }
        if ($('#txt_UserPwd').val() != $('#txt_UserConfrpwd').val()) {
            $('#txt_UserPwd').focus();
            Swal.fire(
                {
                    icon: 'info',
                    title: 'Info',
                    text: 'UserPassword and ConfrimPassword Must be Same'
                });
            return false;
        }
        if ($('#ddl_UserType').val() === "") {
            $('#ddl_UserType').focus();
            Swal.fire(
                {
                    icon: 'info',
                    title: 'Info',
                    text: 'User Type cannot be  blank!!'
                }
            );
            return false;
        }
        return true;
    }
    //ClearUser
    function ClearUser() {
        debugger;
        $('#txt_UserName').val('');
        $('#txt_PhoneNo').val('');
        $('#txt_UserEmail').val('');
        $('#txt_UserPwd').val('');
        $('#txt_UserConfrpwd').val('');
        $('#txt_UserName').val('');
        $('#txt_UserName').val('');
        $('#ddl_UserType').val('');
        $('#btn_submit').innerText = 'Submit';
        $("#btn_submit").text("SUBMIT")
        $('#txt_UserName').focus();
    }
    setTimeout(function () {
        initializeDataTable();
    }, 0);
    var initializeDataTable = function () {
        if ($.fn.DataTable.isDataTable('#tbl_ViewUserMstr')) {
            $('#tbl_ViewUserMstr').DataTable().destroy();
        }
        var dt = $('#tbl_ViewUserMstr').DataTable(
            {
                "processing": true,
                "responsive": true,
                "serverSide": true,
                "searching": true,
                "paging": true,
                "sort": true,
                "ajax": {
                    "url": "/Master/GetUser",
                    "type": "GET"  // Assuming a POST request, change it to "GET" if needed
                },
                "columns": [
                    {
                        "className": "text-center",
                        "data": null,
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "User_Name" },
                    { "data": "User_PhNo" },
                    { "data": "User_Email" },
                    { "data": "User_Type" },
                    {
                        "class": "details-control",
                        "orderable": false,
                        "data": null, render: function (data, type, row) {
                            return "<div class='btn-group' style='text-align:center;' ><a  id='" + data.User_Id + "' onclick='return_id(this.id);' style='cursor:pointer;' title='Edit' class='btn btn-primary action_btn'><i class='jsgrid-button jsgrid-edit-button ti-pencil-alt btn btn-primary color-white'></i></a>" +
                                "<a id='" + data.User_Id+ "' onclick='delete_id(this.id);' style='cursor:pointer;' title='Delete' class='btn btn-danger action_btn'><i class='jsgrid-button jsgrid-delete-button ti-trash btn btn-danger  color-white'></i></a></div>";
                        }
                    }
                ],
                "order": [[0, 'asc']],
            });
    }
    //Edit User
    function return_id(par) {
        var canEdit = @Html.Raw(Json.Encode(canWrite1));
        if (!canEdit) {
        Swal.fire({
              icon: 'error',
              title: 'Oops',
              text: 'YOU HAVE NO PERMISSION FOR EDIT!'
         });
         return;
         }
        $('#tab1').addClass('active');
        $('#tab2').removeClass('active').addClass('closed');
        $('#content1').show();
        $('#content2').hide();
        $.ajax(
            {
                url: '/Master/EditUser?Id=' + par, // Replace with your controller and action
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $('#hdnId').val(par),
                        $('#txt_UserName').focus(),
                        $('#txt_UserName').val(data.User_Name)
                    $('#txt_PhoneNo').val(data.User_PhNo)
                    $('#txt_UserEmail').val(data.User_Email)
                    $('#txt_UserPwd').val(data.User_Pwd)
                    $('#txt_UserConfrpwd').val(data.User_Pwd)
                    $('#ddl_UserType').val(data.User_Type)
                    $('#btn_submit').text('UPDATE');
                },
                error: function () {
                    console.log('Error loading data.');
                }
            });
    }
    //Delete User
    function delete_id(par) {
        debugger;
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                var equip = {
                    'User_Id': par,
                    'User_Pwd':' ',
                    'Action': 'DELETE'
                };
                $.ajax({
                    url: '/Master/MstrUserIUD',
                    data: JSON.stringify(equip),
                    type: 'post',
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (res) {
                        if (res === "User Master Deleted Successfully") {
                            Swal.fire({
                                icon: 'success',
                                title: "Deleted",
                                text: res
                            });
                            setTimeout(function () {
                                initializeDataTable();
                                debugger;
                                $('#content1').hide();
                                $('#content2').show();
                            }, 100);
                        }
                        else if (res === "YOU HAVE NO PERMISSION FOR DELETE!") {
                            Swal.fire({
                                icon: 'error',
                                title: "Opss",
                                text: res
                            });
                        }
                        else if (res === "Admin cannot be deleted") {
                            Swal.fire({
                                icon: 'error',
                                text: res
                            });
                        }
                        else {
                            alert(res);
                        }
                    },
                    error: function (err) {
                        alert(err);
                    }
                });
            }
        });
    }
</script>
